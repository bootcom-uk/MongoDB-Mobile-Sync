name: Publish MongoDB.Sync nuget package

on:
  push:
    branches: [ "main" ]
    tags:
      - 'publish-mongodb-sync-lib'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Restore dependencies for the specific project
    - name: Restore dependencies
      run: dotnet restore Common/MongoDB.Sync/MongoDB.Sync.csproj

    # Build the specific project in Release mode
    - name: Build project
      run: dotnet build Common/MongoDB.Sync/MongoDB.Sync.csproj --configuration Release

    # Pack the specific project as a NuGet package
    - name: Pack NuGet package
      run: dotnet pack Common/MongoDB.Sync/MongoDB.Sync.csproj --configuration Release --output Common/MongoDB.Sync/bin/Release

    # Find the .nupkg file and store the path in a variable
    - name: Set NuGet package path
      id: set-path
      shell: pwsh
      run: |
        $files = Get-ChildItem -Path Common/MongoDB.Sync/bin/Release -Filter *.nupkg -Recurse
        if ($files.Count -eq 0) {
          Write-Error "No .nupkg files found in Common/MongoDB.Sync/bin/Release"
          exit 1
        }
        $packagePath = $files[0].FullName
        echo $packagePath
        echo "PACKAGE_PATH=$packagePath" >> $GITHUB_ENV

    # Debug PACKAGE_PATH
    - name: Debug PACKAGE_PATH
      run: echo "PACKAGE_PATH is ${{env.PACKAGE_PATH}}"
      shell: pwsh

    # Publish to NuGet
    - name: Publish to NuGet
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Pushing package from: env.PACKAGE_PATH"
        dotnet nuget push "${{env.PACKAGE_PATH}}" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
      shell: pwsh
