name: Publish MongoDB.Sync.MAUI NuGet Package

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Allow writing to the repository

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensure the entire Git history is fetched

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Get Current Version from File
      id: get-version
      shell: bash
      run: |
        if [ ! -f maui_version.txt ]; then
        echo "1.0.0" > maui_version.txt
        fi
        CURRENT_VERSION=$(cat maui_version.txt)
        echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV


    - name: Increment Version
      id: increment-version
      shell: bash
      run: |
        IFS='.' read -r MAJOR MINOR PATCH <<< "${{ env.CURRENT_VERSION }}"
        PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "$NEW_VERSION" > ./maui_version.txt  # Specify the file path explicitly
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Commit Updated Version
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add maui_version.txt
        git commit -m "Increment version to ${{ env.NEW_VERSION }}"
        git push --force

    - name: Build project
      run: dotnet build Common/MongoDB.Sync.MAUI/MongoDB.Sync.MAUI.csproj --configuration Release

    - name: Pack NuGet package
      run: dotnet pack Common/MongoDB.Sync.MAUI/MongoDB.Sync.MAUI.csproj --configuration Release --output Common/MongoDB.Sync.MAUI/bin/Release /p:PackageVersion=${{ env.NEW_VERSION }}

    - name: Publish to NuGet
      shell: pwsh
      run: |
        $files = Get-ChildItem -Path "Common/MongoDB.Sync.MAUI/bin/Release" -Filter *.nupkg -Recurse
        if ($files.Count -eq 0) {
          throw "No .nupkg files found in Common/MongoDB.Sync.MAUI/bin/Release"
        }
        $packagePath = $files[0].FullName
        dotnet nuget push "$packagePath" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
