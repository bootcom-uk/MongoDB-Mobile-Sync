name: Publish MongoDB.Sync.MAUI NuGet Package

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Required to interact with the repository
  actions: write   # Required for workflow execution

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensure the entire Git history is fetched

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install GitHub CLI
      run: choco install gh -y

    - name: Authenticate GitHub CLI
      run: gh auth login --with-token <<< "${{ secrets.GH_TOKEN }}"

    - name: Get Current Version
      id: get-version
      run: |
        echo "CURRENT_VERSION=${{ secrets.MAUI_LIB_CURRENT_VERSION }}" >> $GITHUB_ENV

    - name: Increment Version
      id: increment-version
      run: |
        IFS='.' read -r MAJOR MINOR PATCH <<< "${{ env.CURRENT_VERSION }}"
        PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Build project
      run: dotnet build Common/MongoDB.Sync.MAUI/MongoDB.Sync.MAUI.csproj --configuration Release

    - name: Pack NuGet package
      run: dotnet pack Common/MongoDB.Sync.MAUI/MongoDB.Sync.MAUI.csproj --configuration Release --output Common/MongoDB.Sync.MAUI/bin/Release /p:PackageVersion=${{ env.NEW_VERSION }}

    - name: Set NuGet package path
      id: set-path
      shell: pwsh
      run: |
        $files = Get-ChildItem -Path "Common/MongoDB.Sync.MAUI/bin/Release" -Filter *.nupkg -Recurse
        if ($files.Count -eq 0) {
          Write-Error "No .nupkg files found in Common/MongoDB.Sync.MAUI/bin/Release"
          exit 1
        }
        $packagePath = $files[0].FullName
        echo "PackagePath=$packagePath" >> $GITHUB_ENV

    - name: Publish to NuGet
      run: dotnet nuget push "${{ env.PackagePath }}" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}

    - name: Update GitHub Secret with New Version
      run: gh secret set MAUI_LIB_CURRENT_VERSION --body "${{ env.NEW_VERSION }}"
